{"remainingRequest":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\core-js\\internals\\string-punycode-to-ascii.js","dependencies":[{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\core-js\\internals\\string-punycode-to-ascii.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vYmVzdGllanMvcHVueWNvZGUuanMvYmxvYi9tYXN0ZXIvcHVueWNvZGUuanMKCnZhciBtYXhJbnQgPSAyMTQ3NDgzNjQ3OyAvLyBha2EuIDB4N0ZGRkZGRkYgb3IgMl4zMS0xCgp2YXIgYmFzZSA9IDM2Owp2YXIgdE1pbiA9IDE7CnZhciB0TWF4ID0gMjY7CnZhciBza2V3ID0gMzg7CnZhciBkYW1wID0gNzAwOwp2YXIgaW5pdGlhbEJpYXMgPSA3MjsKdmFyIGluaXRpYWxOID0gMTI4OyAvLyAweDgwCgp2YXIgZGVsaW1pdGVyID0gJy0nOyAvLyAnXHgyRCcKCnZhciByZWdleE5vbkFTQ0lJID0gL1teXDAtXHUwMDdFXS87IC8vIG5vbi1BU0NJSSBjaGFycwoKdmFyIHJlZ2V4U2VwYXJhdG9ycyA9IC9bLlx1MzAwMlx1RkYwRVx1RkY2MV0vZzsgLy8gUkZDIDM0OTAgc2VwYXJhdG9ycwoKdmFyIE9WRVJGTE9XX0VSUk9SID0gJ092ZXJmbG93OiBpbnB1dCBuZWVkcyB3aWRlciBpbnRlZ2VycyB0byBwcm9jZXNzJzsKdmFyIGJhc2VNaW51c1RNaW4gPSBiYXNlIC0gdE1pbjsKdmFyIGZsb29yID0gTWF0aC5mbG9vcjsKdmFyIHN0cmluZ0Zyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGU7Ci8qKgogKiBDcmVhdGVzIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG51bWVyaWMgY29kZSBwb2ludHMgb2YgZWFjaCBVbmljb2RlCiAqIGNoYXJhY3RlciBpbiB0aGUgc3RyaW5nLiBXaGlsZSBKYXZhU2NyaXB0IHVzZXMgVUNTLTIgaW50ZXJuYWxseSwKICogdGhpcyBmdW5jdGlvbiB3aWxsIGNvbnZlcnQgYSBwYWlyIG9mIHN1cnJvZ2F0ZSBoYWx2ZXMgKGVhY2ggb2Ygd2hpY2gKICogVUNTLTIgZXhwb3NlcyBhcyBzZXBhcmF0ZSBjaGFyYWN0ZXJzKSBpbnRvIGEgc2luZ2xlIGNvZGUgcG9pbnQsCiAqIG1hdGNoaW5nIFVURi0xNi4KICovCgp2YXIgdWNzMmRlY29kZSA9IGZ1bmN0aW9uIChzdHJpbmcpIHsKICB2YXIgb3V0cHV0ID0gW107CiAgdmFyIGNvdW50ZXIgPSAwOwogIHZhciBsZW5ndGggPSBzdHJpbmcubGVuZ3RoOwoKICB3aGlsZSAoY291bnRlciA8IGxlbmd0aCkgewogICAgdmFyIHZhbHVlID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTsKCiAgICBpZiAodmFsdWUgPj0gMHhEODAwICYmIHZhbHVlIDw9IDB4REJGRiAmJiBjb3VudGVyIDwgbGVuZ3RoKSB7CiAgICAgIC8vIEl0J3MgYSBoaWdoIHN1cnJvZ2F0ZSwgYW5kIHRoZXJlIGlzIGEgbmV4dCBjaGFyYWN0ZXIuCiAgICAgIHZhciBleHRyYSA9IHN0cmluZy5jaGFyQ29kZUF0KGNvdW50ZXIrKyk7CgogICAgICBpZiAoKGV4dHJhICYgMHhGQzAwKSA9PSAweERDMDApIHsKICAgICAgICAvLyBMb3cgc3Vycm9nYXRlLgogICAgICAgIG91dHB1dC5wdXNoKCgodmFsdWUgJiAweDNGRikgPDwgMTApICsgKGV4dHJhICYgMHgzRkYpICsgMHgxMDAwMCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gSXQncyBhbiB1bm1hdGNoZWQgc3Vycm9nYXRlOyBvbmx5IGFwcGVuZCB0aGlzIGNvZGUgdW5pdCwgaW4gY2FzZSB0aGUKICAgICAgICAvLyBuZXh0IGNvZGUgdW5pdCBpcyB0aGUgaGlnaCBzdXJyb2dhdGUgb2YgYSBzdXJyb2dhdGUgcGFpci4KICAgICAgICBvdXRwdXQucHVzaCh2YWx1ZSk7CiAgICAgICAgY291bnRlci0tOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBvdXRwdXQucHVzaCh2YWx1ZSk7CiAgICB9CiAgfQoKICByZXR1cm4gb3V0cHV0Owp9OwovKioKICogQ29udmVydHMgYSBkaWdpdC9pbnRlZ2VyIGludG8gYSBiYXNpYyBjb2RlIHBvaW50LgogKi8KCgp2YXIgZGlnaXRUb0Jhc2ljID0gZnVuY3Rpb24gKGRpZ2l0KSB7CiAgLy8gIDAuLjI1IG1hcCB0byBBU0NJSSBhLi56IG9yIEEuLloKICAvLyAyNi4uMzUgbWFwIHRvIEFTQ0lJIDAuLjkKICByZXR1cm4gZGlnaXQgKyAyMiArIDc1ICogKGRpZ2l0IDwgMjYpOwp9OwovKioKICogQmlhcyBhZGFwdGF0aW9uIGZ1bmN0aW9uIGFzIHBlciBzZWN0aW9uIDMuNCBvZiBSRkMgMzQ5Mi4KICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM0OTIjc2VjdGlvbi0zLjQKICovCgoKdmFyIGFkYXB0ID0gZnVuY3Rpb24gKGRlbHRhLCBudW1Qb2ludHMsIGZpcnN0VGltZSkgewogIHZhciBrID0gMDsKICBkZWx0YSA9IGZpcnN0VGltZSA/IGZsb29yKGRlbHRhIC8gZGFtcCkgOiBkZWx0YSA+PiAxOwogIGRlbHRhICs9IGZsb29yKGRlbHRhIC8gbnVtUG9pbnRzKTsKCiAgZm9yICg7IGRlbHRhID4gYmFzZU1pbnVzVE1pbiAqIHRNYXggPj4gMTsgayArPSBiYXNlKSB7CiAgICBkZWx0YSA9IGZsb29yKGRlbHRhIC8gYmFzZU1pbnVzVE1pbik7CiAgfQoKICByZXR1cm4gZmxvb3IoayArIChiYXNlTWludXNUTWluICsgMSkgKiBkZWx0YSAvIChkZWx0YSArIHNrZXcpKTsKfTsKLyoqCiAqIENvbnZlcnRzIGEgc3RyaW5nIG9mIFVuaWNvZGUgc3ltYm9scyAoZS5nLiBhIGRvbWFpbiBuYW1lIGxhYmVsKSB0byBhCiAqIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuCiAqLwovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LXN0YXRlbWVudHMgLS0gVE9ETwoKCnZhciBlbmNvZGUgPSBmdW5jdGlvbiAoaW5wdXQpIHsKICB2YXIgb3V0cHV0ID0gW107IC8vIENvbnZlcnQgdGhlIGlucHV0IGluIFVDUy0yIHRvIGFuIGFycmF5IG9mIFVuaWNvZGUgY29kZSBwb2ludHMuCgogIGlucHV0ID0gdWNzMmRlY29kZShpbnB1dCk7IC8vIENhY2hlIHRoZSBsZW5ndGguCgogIHZhciBpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aDsgLy8gSW5pdGlhbGl6ZSB0aGUgc3RhdGUuCgogIHZhciBuID0gaW5pdGlhbE47CiAgdmFyIGRlbHRhID0gMDsKICB2YXIgYmlhcyA9IGluaXRpYWxCaWFzOwogIHZhciBpLCBjdXJyZW50VmFsdWU7IC8vIEhhbmRsZSB0aGUgYmFzaWMgY29kZSBwb2ludHMuCgogIGZvciAoaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykgewogICAgY3VycmVudFZhbHVlID0gaW5wdXRbaV07CgogICAgaWYgKGN1cnJlbnRWYWx1ZSA8IDB4ODApIHsKICAgICAgb3V0cHV0LnB1c2goc3RyaW5nRnJvbUNoYXJDb2RlKGN1cnJlbnRWYWx1ZSkpOwogICAgfQogIH0KCiAgdmFyIGJhc2ljTGVuZ3RoID0gb3V0cHV0Lmxlbmd0aDsgLy8gbnVtYmVyIG9mIGJhc2ljIGNvZGUgcG9pbnRzLgoKICB2YXIgaGFuZGxlZENQQ291bnQgPSBiYXNpY0xlbmd0aDsgLy8gbnVtYmVyIG9mIGNvZGUgcG9pbnRzIHRoYXQgaGF2ZSBiZWVuIGhhbmRsZWQ7CiAgLy8gRmluaXNoIHRoZSBiYXNpYyBzdHJpbmcgd2l0aCBhIGRlbGltaXRlciB1bmxlc3MgaXQncyBlbXB0eS4KCiAgaWYgKGJhc2ljTGVuZ3RoKSB7CiAgICBvdXRwdXQucHVzaChkZWxpbWl0ZXIpOwogIH0gLy8gTWFpbiBlbmNvZGluZyBsb29wOgoKCiAgd2hpbGUgKGhhbmRsZWRDUENvdW50IDwgaW5wdXRMZW5ndGgpIHsKICAgIC8vIEFsbCBub24tYmFzaWMgY29kZSBwb2ludHMgPCBuIGhhdmUgYmVlbiBoYW5kbGVkIGFscmVhZHkuIEZpbmQgdGhlIG5leHQgbGFyZ2VyIG9uZToKICAgIHZhciBtID0gbWF4SW50OwoKICAgIGZvciAoaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykgewogICAgICBjdXJyZW50VmFsdWUgPSBpbnB1dFtpXTsKCiAgICAgIGlmIChjdXJyZW50VmFsdWUgPj0gbiAmJiBjdXJyZW50VmFsdWUgPCBtKSB7CiAgICAgICAgbSA9IGN1cnJlbnRWYWx1ZTsKICAgICAgfQogICAgfSAvLyBJbmNyZWFzZSBgZGVsdGFgIGVub3VnaCB0byBhZHZhbmNlIHRoZSBkZWNvZGVyJ3MgPG4saT4gc3RhdGUgdG8gPG0sMD4sIGJ1dCBndWFyZCBhZ2FpbnN0IG92ZXJmbG93LgoKCiAgICB2YXIgaGFuZGxlZENQQ291bnRQbHVzT25lID0gaGFuZGxlZENQQ291bnQgKyAxOwoKICAgIGlmIChtIC0gbiA+IGZsb29yKChtYXhJbnQgLSBkZWx0YSkgLyBoYW5kbGVkQ1BDb3VudFBsdXNPbmUpKSB7CiAgICAgIHRocm93IFJhbmdlRXJyb3IoT1ZFUkZMT1dfRVJST1IpOwogICAgfQoKICAgIGRlbHRhICs9IChtIC0gbikgKiBoYW5kbGVkQ1BDb3VudFBsdXNPbmU7CiAgICBuID0gbTsKCiAgICBmb3IgKGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHsKICAgICAgY3VycmVudFZhbHVlID0gaW5wdXRbaV07CgogICAgICBpZiAoY3VycmVudFZhbHVlIDwgbiAmJiArK2RlbHRhID4gbWF4SW50KSB7CiAgICAgICAgdGhyb3cgUmFuZ2VFcnJvcihPVkVSRkxPV19FUlJPUik7CiAgICAgIH0KCiAgICAgIGlmIChjdXJyZW50VmFsdWUgPT0gbikgewogICAgICAgIC8vIFJlcHJlc2VudCBkZWx0YSBhcyBhIGdlbmVyYWxpemVkIHZhcmlhYmxlLWxlbmd0aCBpbnRlZ2VyLgogICAgICAgIHZhciBxID0gZGVsdGE7CgogICAgICAgIGZvciAodmFyIGsgPSBiYXNlOzsKICAgICAgICAvKiBubyBjb25kaXRpb24gKi8KICAgICAgICBrICs9IGJhc2UpIHsKICAgICAgICAgIHZhciB0ID0gayA8PSBiaWFzID8gdE1pbiA6IGsgPj0gYmlhcyArIHRNYXggPyB0TWF4IDogayAtIGJpYXM7CiAgICAgICAgICBpZiAocSA8IHQpIGJyZWFrOwogICAgICAgICAgdmFyIHFNaW51c1QgPSBxIC0gdDsKICAgICAgICAgIHZhciBiYXNlTWludXNUID0gYmFzZSAtIHQ7CiAgICAgICAgICBvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHQgKyBxTWludXNUICUgYmFzZU1pbnVzVCkpKTsKICAgICAgICAgIHEgPSBmbG9vcihxTWludXNUIC8gYmFzZU1pbnVzVCk7CiAgICAgICAgfQoKICAgICAgICBvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHEpKSk7CiAgICAgICAgYmlhcyA9IGFkYXB0KGRlbHRhLCBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsIGhhbmRsZWRDUENvdW50ID09IGJhc2ljTGVuZ3RoKTsKICAgICAgICBkZWx0YSA9IDA7CiAgICAgICAgKytoYW5kbGVkQ1BDb3VudDsKICAgICAgfQogICAgfQoKICAgICsrZGVsdGE7CiAgICArK247CiAgfQoKICByZXR1cm4gb3V0cHV0LmpvaW4oJycpOwp9OwoKbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5wdXQpIHsKICB2YXIgZW5jb2RlZCA9IFtdOwogIHZhciBsYWJlbHMgPSBpbnB1dC50b0xvd2VyQ2FzZSgpLnJlcGxhY2UocmVnZXhTZXBhcmF0b3JzLCAnXHUwMDJFJykuc3BsaXQoJy4nKTsKICB2YXIgaSwgbGFiZWw7CgogIGZvciAoaSA9IDA7IGkgPCBsYWJlbHMubGVuZ3RoOyBpKyspIHsKICAgIGxhYmVsID0gbGFiZWxzW2ldOwogICAgZW5jb2RlZC5wdXNoKHJlZ2V4Tm9uQVNDSUkudGVzdChsYWJlbCkgPyAneG4tLScgKyBlbmNvZGUobGFiZWwpIDogbGFiZWwpOwogIH0KCiAgcmV0dXJuIGVuY29kZWQuam9pbignLicpOwp9Ow=="},null]}