{"remainingRequest":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\axios\\lib\\adapters\\http.js","dependencies":[{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\axios\\lib\\adapters\\http.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/vscodeprojects/vuepress-theme-reco/myblogs/node_modules/axios/lib/adapters/http.js"],"names":["utils","require","settle","buildFullPath","buildURL","http","https","httpFollow","httpsFollow","url","zlib","pkg","createError","enhanceError","isHttps","setProxy","options","proxy","location","hostname","host","port","path","auth","base64","Buffer","from","username","password","toString","headers","beforeRedirect","redirection","href","module","exports","httpAdapter","config","Promise","dispatchHttpRequest","resolvePromise","rejectPromise","resolve","value","reject","data","version","isStream","isBuffer","isArrayBuffer","Uint8Array","isString","length","undefined","fullPath","baseURL","parsed","parse","protocol","urlAuth","split","urlUsername","urlPassword","Authorization","isHttpsRequest","test","agent","httpsAgent","httpAgent","params","paramsSerializer","replace","method","toUpperCase","agents","socketPath","proxyEnv","slice","proxyUrl","process","env","parsedProxyUrl","noProxyEnv","no_proxy","NO_PROXY","shouldProxy","noProxy","map","trim","s","some","proxyMatch","proxyElement","substr","proxyUrlAuth","transport","isHttpsProxy","maxRedirects","maxBodyLength","req","request","handleResponse","res","aborted","stream","lastRequest","statusCode","decompress","pipe","createUnzip","response","status","statusText","statusMessage","responseType","responseBuffer","on","handleStreamData","chunk","push","maxContentLength","concat","destroy","handleStreamError","err","handleStreamEnd","responseData","responseEncoding","stripBOM","handleRequestError","code","timeout","setTimeout","handleRequestTimeout","abort","cancelToken","promise","then","onCanceled","cancel","end"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(config.timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      });\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n"]}]}