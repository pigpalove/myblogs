{"remainingRequest":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\follow-redirects\\index.js","dependencies":[{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\follow-redirects\\index.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/vscodeprojects/vuepress-theme-reco/myblogs/node_modules/follow-redirects/index.js"],"names":["url","require","URL","http","https","Writable","assert","debug","events","eventHandlers","Object","create","forEach","event","arg1","arg2","arg3","_redirectable","emit","RedirectionError","createErrorType","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","options","responseCallback","call","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","_performRequest","prototype","abort","abortRequest","_currentRequest","removeAllListeners","write","data","encoding","callback","TypeError","length","maxBodyLength","push","end","currentRequest","setHeader","name","value","headers","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","removeListener","destroy","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","defineProperty","get","host","hostname","pathname","path","searchPos","indexOf","substring","search","protocol","nativeProtocol","nativeProtocols","agents","scheme","substr","agent","request","_currentUrl","format","e","_isRedirect","i","buffers","writeNext","error","buffer","finished","statusCode","trackRedirects","location","followRedirects","maxRedirects","test","removeMatchingHeaders","previousHostName","parse","redirectUrl","resolve","redirectUrlParts","assign","beforeRedirect","responseDetails","err","cause","message","responseUrl","redirects","wrap","protocols","exports","keys","wrappedProtocol","input","urlStr","urlToOptions","equal","wrappedRequest","defineProperties","configurable","enumerable","writable","noop","urlObject","startsWith","slice","hash","href","port","Number","regex","lastValue","header","code","defaultMessage","CustomError","Error","captureStackTrace","constructor","module"],"mappings":"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","sourcesContent":["var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  // Abort the internal request\n  abortRequest(this._currentRequest);\n\n  // Abort this request\n  this.emit(\"abort\");\n  this.removeAllListeners();\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Prevent a timeout from triggering\n  function clearTimer() {\n    clearTimeout(this._timeout);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!this.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Start the timer when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  this.on(\"socket\", destroyOnTimeout);\n  this.once(\"response\", clearTimer);\n  this.once(\"error\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var e = 0; e < events.length; e++) {\n    request.on(events[e], eventHandlers[events[e]]);\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      statusCode >= 300 && statusCode < 400) {\n    // Abort the current request\n    abortRequest(this._currentRequest);\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new TooManyRedirectsError());\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe, […]\n    // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n    // the request method from POST to GET for the subsequent request.\n    if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n        // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n        // the server is redirecting the user agent to a different resource […]\n        // A user agent can perform a retrieval request targeting that URI\n        // (a GET or HEAD request if using HTTP) […]\n        (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      removeMatchingHeaders(/^content-/i, this._options.headers);\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    var previousHostName = removeMatchingHeaders(/^host$/i, this._options.headers) ||\n      url.parse(this._currentUrl).hostname;\n\n    // Create the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    this._isRedirect = true;\n    var redirectUrlParts = url.parse(redirectUrl);\n    Object.assign(this._options, redirectUrlParts);\n\n    // Drop the Authorization header if redirecting to another host\n    if (redirectUrlParts.hostname !== previousHostName) {\n      removeMatchingHeaders(/^authorization$/i, this._options.headers);\n    }\n\n    // Evaluate the beforeRedirect callback\n    if (typeof this._options.beforeRedirect === \"function\") {\n      var responseDetails = { headers: response.headers };\n      try {\n        this._options.beforeRedirect.call(null, this._options, responseDetails);\n      }\n      catch (err) {\n        this.emit(\"error\", err);\n        return;\n      }\n      this._sanitizeOptions(this._options);\n    }\n\n    // Perform the redirected request\n    try {\n      this._performRequest();\n    }\n    catch (cause) {\n      var error = new RedirectionError(\"Redirected request failed: \" + cause.message);\n      error.cause = cause;\n      this.emit(\"error\", error);\n    }\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return lastValue;\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(message) {\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message || defaultMessage;\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var e = 0; e < events.length; e++) {\n    request.removeListener(events[e], eventHandlers[events[e]]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n"]}]}