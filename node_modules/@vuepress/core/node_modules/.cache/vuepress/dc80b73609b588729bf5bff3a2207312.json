{"remainingRequest":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\core-js\\internals\\regexp-exec.js","dependencies":[{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\core-js\\internals\\regexp-exec.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vscodeprojects\\vuepress-theme-reco\\myblogs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIHJlZ2V4cEZsYWdzID0gcmVxdWlyZSgnLi9yZWdleHAtZmxhZ3MnKTsKCnZhciBzdGlja3lIZWxwZXJzID0gcmVxdWlyZSgnLi9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTsKCnZhciBzaGFyZWQgPSByZXF1aXJlKCcuL3NoYXJlZCcpOwoKdmFyIG5hdGl2ZUV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7CnZhciBuYXRpdmVSZXBsYWNlID0gc2hhcmVkKCduYXRpdmUtc3RyaW5nLXJlcGxhY2UnLCBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2UpOwp2YXIgcGF0Y2hlZEV4ZWMgPSBuYXRpdmVFeGVjOwoKdmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IGZ1bmN0aW9uICgpIHsKICB2YXIgcmUxID0gL2EvOwogIHZhciByZTIgPSAvYiovZzsKICBuYXRpdmVFeGVjLmNhbGwocmUxLCAnYScpOwogIG5hdGl2ZUV4ZWMuY2FsbChyZTIsICdhJyk7CiAgcmV0dXJuIHJlMS5sYXN0SW5kZXggIT09IDAgfHwgcmUyLmxhc3RJbmRleCAhPT0gMDsKfSgpOwoKdmFyIFVOU1VQUE9SVEVEX1kgPSBzdGlja3lIZWxwZXJzLlVOU1VQUE9SVEVEX1kgfHwgc3RpY2t5SGVscGVycy5CUk9LRU5fQ0FSRVQ7IC8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwLCBjb3BpZWQgZnJvbSBlczUtc2hpbSdzIFN0cmluZyNzcGxpdCBwYXRjaC4KLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby1hc3NlcnRpb24tY2FwdHVyaW5nLWdyb3VwLCByZWdleHAvbm8tZW1wdHktZ3JvdXAsIHJlZ2V4cC9uby1sYXp5LWVuZHMgLS0gdGVzdGluZwoKdmFyIE5QQ0dfSU5DTFVERUQgPSAvKCk/Py8uZXhlYygnJylbMV0gIT09IHVuZGVmaW5lZDsKdmFyIFBBVENIID0gVVBEQVRFU19MQVNUX0lOREVYX1dST05HIHx8IE5QQ0dfSU5DTFVERUQgfHwgVU5TVVBQT1JURURfWTsKCmlmIChQQVRDSCkgewogIHBhdGNoZWRFeGVjID0gZnVuY3Rpb24gZXhlYyhzdHIpIHsKICAgIHZhciByZSA9IHRoaXM7CiAgICB2YXIgbGFzdEluZGV4LCByZUNvcHksIG1hdGNoLCBpOwogICAgdmFyIHN0aWNreSA9IFVOU1VQUE9SVEVEX1kgJiYgcmUuc3RpY2t5OwogICAgdmFyIGZsYWdzID0gcmVnZXhwRmxhZ3MuY2FsbChyZSk7CiAgICB2YXIgc291cmNlID0gcmUuc291cmNlOwogICAgdmFyIGNoYXJzQWRkZWQgPSAwOwogICAgdmFyIHN0ckNvcHkgPSBzdHI7CgogICAgaWYgKHN0aWNreSkgewogICAgICBmbGFncyA9IGZsYWdzLnJlcGxhY2UoJ3knLCAnJyk7CgogICAgICBpZiAoZmxhZ3MuaW5kZXhPZignZycpID09PSAtMSkgewogICAgICAgIGZsYWdzICs9ICdnJzsKICAgICAgfQoKICAgICAgc3RyQ29weSA9IFN0cmluZyhzdHIpLnNsaWNlKHJlLmxhc3RJbmRleCk7IC8vIFN1cHBvcnQgYW5jaG9yZWQgc3RpY2t5IGJlaGF2aW9yLgoKICAgICAgaWYgKHJlLmxhc3RJbmRleCA+IDAgJiYgKCFyZS5tdWx0aWxpbmUgfHwgcmUubXVsdGlsaW5lICYmIHN0cltyZS5sYXN0SW5kZXggLSAxXSAhPT0gJ1xuJykpIHsKICAgICAgICBzb3VyY2UgPSAnKD86ICcgKyBzb3VyY2UgKyAnKSc7CiAgICAgICAgc3RyQ29weSA9ICcgJyArIHN0ckNvcHk7CiAgICAgICAgY2hhcnNBZGRlZCsrOwogICAgICB9IC8vIF4oPyArIHJ4ICsgKSBpcyBuZWVkZWQsIGluIGNvbWJpbmF0aW9uIHdpdGggc29tZSBzdHIgc2xpY2luZywgdG8KICAgICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLgoKCiAgICAgIHJlQ29weSA9IG5ldyBSZWdFeHAoJ14oPzonICsgc291cmNlICsgJyknLCBmbGFncyk7CiAgICB9CgogICAgaWYgKE5QQ0dfSU5DTFVERUQpIHsKICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyBzb3VyY2UgKyAnJCg/IVxccyknLCBmbGFncyk7CiAgICB9CgogICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmUubGFzdEluZGV4OwogICAgbWF0Y2ggPSBuYXRpdmVFeGVjLmNhbGwoc3RpY2t5ID8gcmVDb3B5IDogcmUsIHN0ckNvcHkpOwoKICAgIGlmIChzdGlja3kpIHsKICAgICAgaWYgKG1hdGNoKSB7CiAgICAgICAgbWF0Y2guaW5wdXQgPSBtYXRjaC5pbnB1dC5zbGljZShjaGFyc0FkZGVkKTsKICAgICAgICBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKGNoYXJzQWRkZWQpOwogICAgICAgIG1hdGNoLmluZGV4ID0gcmUubGFzdEluZGV4OwogICAgICAgIHJlLmxhc3RJbmRleCArPSBtYXRjaFswXS5sZW5ndGg7CiAgICAgIH0gZWxzZSByZS5sYXN0SW5kZXggPSAwOwogICAgfSBlbHNlIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHsKICAgICAgcmUubGFzdEluZGV4ID0gcmUuZ2xvYmFsID8gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGggOiBsYXN0SW5kZXg7CiAgICB9CgogICAgaWYgKE5QQ0dfSU5DTFVERUQgJiYgbWF0Y2ggJiYgbWF0Y2gubGVuZ3RoID4gMSkgewogICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYAogICAgICAvLyBmb3IgTlBDRywgbGlrZSBJRTguIE5PVEU6IFRoaXMgZG9lc24nIHdvcmsgZm9yIC8oLj8pPy8KICAgICAgbmF0aXZlUmVwbGFjZS5jYWxsKG1hdGNoWzBdLCByZUNvcHksIGZ1bmN0aW9uICgpIHsKICAgICAgICBmb3IgKGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykgewogICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICAgIHJldHVybiBtYXRjaDsKICB9Owp9Cgptb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjOw=="},{"version":3,"sources":["D:/vscodeprojects/vuepress-theme-reco/myblogs/node_modules/core-js/internals/regexp-exec.js"],"names":["regexpFlags","require","stickyHelpers","shared","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","call","lastIndex","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","undefined","PATCH","str","re","reCopy","match","i","sticky","flags","source","charsAdded","strCopy","indexOf","slice","multiline","input","index","length","global","arguments","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\nvar shared = require('./shared');\n\nvar nativeExec = RegExp.prototype.exec;\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\n// eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"]}]}